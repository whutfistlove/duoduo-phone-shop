<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duoduo.phoneshop.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.duoduo.phoneshop.entity.Product">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="categoryId" property="categoryId" jdbcType="BIGINT"/>
        <result column="n" property="n" jdbcType="VARCHAR"/>
        <result column="brand" property="brand" jdbcType="VARCHAR"/>
        <result column="model" property="model" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="stock" property="stock" jdbcType="INTEGER"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="category_n" property="categoryN" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        p.id, p.categoryId, p.n, p.brand, p.model, p.price, p.stock,
        p.image, p.description, p.status, p.createTime, p.updateTime
    </sql>

    <insert id="insert" parameterType="com.duoduo.phoneshop.entity.Product" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO product (categoryId, n, brand, model, price, stock,
                             image, description, status)
        VALUES (#{categoryId}, #{n}, #{brand}, #{model}, #{price}, #{stock},
                #{image}, #{description}, #{status})
    </insert>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>, c.n as category_n
        FROM product p
        LEFT JOIN category c ON p.categoryId = c.id
        WHERE p.id = #{id}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>, c.n as category_n
        FROM product p
        LEFT JOIN category c ON p.categoryId = c.id
        WHERE p.status = 1
        ORDER BY p.createTime DESC
    </select>

    <select id="selectByCategory" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>, c.n as category_n
        FROM product p
        LEFT JOIN category c ON p.categoryId = c.id
        WHERE p.categoryId = #{categoryId} AND p.status = 1
        ORDER BY p.createTime DESC
    </select>

    <select id="search" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>, c.n as category_n
        FROM product p
        LEFT JOIN category c ON p.categoryId = c.id
        WHERE p.status = 1
        <if test="keyword != null and keyword != ''">
            AND (p.n LIKE CONCAT('%', #{keyword}, '%')
            OR p.brand LIKE CONCAT('%', #{keyword}, '%')
            OR p.model LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        ORDER BY p.createTime DESC
    </select>

    <update id="update" parameterType="com.duoduo.phoneshop.entity.Product">
        UPDATE product
        <set>
            <if test="categoryId != null">categoryId = #{categoryId},</if>
            <if test="n != null">n = #{n},</if>
            <if test="brand != null">brand = #{brand},</if>
            <if test="model != null">model = #{model},</if>
            <if test="price != null">price = #{price},</if>
            <if test="stock != null">stock = #{stock},</if>
            <if test="image != null">image = #{image},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM product WHERE id = #{id}
    </delete>

    <update id="updateStock">
        UPDATE product
        SET stock = stock + #{quantity}
        WHERE id = #{id} AND stock + #{quantity} >= 0
    </update>

    <select id="selectHotProducts" resultMap="BaseResultMap">
        SELECT p.*, c.n as category_n
        FROM product p
                 LEFT JOIN category c ON p.categoryId = c.id
                 LEFT JOIN (
            SELECT productId, COUNT(*) as order_count
            FROM order_item oi
                     JOIN `order` o ON oi.orderId = o.id
            WHERE o.status IN (1, 2, 3)
            GROUP BY productId
        ) hot ON p.id = hot.productId
        WHERE p.status = 1
        ORDER BY IFNULL(hot.order_count, 0) DESC, p.createTime DESC
        LIMIT #{limit}
    </select>
</mapper>